/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.decode.iot.policystore.CreateEntitlementPolicyRequest', null, global);
goog.exportSymbol('proto.decode.iot.policystore.CreateEntitlementPolicyResponse', null, global);
goog.exportSymbol('proto.decode.iot.policystore.DeleteEntitlementPolicyRequest', null, global);
goog.exportSymbol('proto.decode.iot.policystore.DeleteEntitlementPolicyResponse', null, global);
goog.exportSymbol('proto.decode.iot.policystore.ListEntitlementPoliciesRequest', null, global);
goog.exportSymbol('proto.decode.iot.policystore.ListEntitlementPoliciesResponse', null, global);
goog.exportSymbol('proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy', null, global);
goog.exportSymbol('proto.decode.iot.policystore.Operation', null, global);
goog.exportSymbol('proto.decode.iot.policystore.Operation.Action', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.decode.iot.policystore.Operation.repeatedFields_, null);
};
goog.inherits(proto.decode.iot.policystore.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.Operation.displayName = 'proto.decode.iot.policystore.Operation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.decode.iot.policystore.Operation.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0),
    binsList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
    interval: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.Operation}
 */
proto.decode.iot.policystore.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.Operation;
  return proto.decode.iot.policystore.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.Operation}
 */
proto.decode.iot.policystore.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSensorId(value);
      break;
    case 2:
      var value = /** @type {!proto.decode.iot.policystore.Operation.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setBinsList(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBinsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.decode.iot.policystore.Operation.Action = {
  UNKNOWN: 0,
  SHARE: 1,
  BIN: 2,
  MOVING_AVG: 3
};

/**
 * optional uint32 sensor_id = 1;
 * @return {number}
 */
proto.decode.iot.policystore.Operation.prototype.getSensorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.decode.iot.policystore.Operation.prototype.setSensorId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Action action = 2;
 * @return {!proto.decode.iot.policystore.Operation.Action}
 */
proto.decode.iot.policystore.Operation.prototype.getAction = function() {
  return /** @type {!proto.decode.iot.policystore.Operation.Action} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.decode.iot.policystore.Operation.Action} value */
proto.decode.iot.policystore.Operation.prototype.setAction = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated double bins = 3;
 * @return {!Array<number>}
 */
proto.decode.iot.policystore.Operation.prototype.getBinsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array<number>} value */
proto.decode.iot.policystore.Operation.prototype.setBinsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.decode.iot.policystore.Operation.prototype.addBins = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.decode.iot.policystore.Operation.prototype.clearBinsList = function() {
  this.setBinsList([]);
};


/**
 * optional uint32 interval = 4;
 * @return {number}
 */
proto.decode.iot.policystore.Operation.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.decode.iot.policystore.Operation.prototype.setInterval = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.decode.iot.policystore.CreateEntitlementPolicyRequest.repeatedFields_, null);
};
goog.inherits(proto.decode.iot.policystore.CreateEntitlementPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.CreateEntitlementPolicyRequest.displayName = 'proto.decode.iot.policystore.CreateEntitlementPolicyRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.CreateEntitlementPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.decode.iot.policystore.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.CreateEntitlementPolicyRequest}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.CreateEntitlementPolicyRequest;
  return proto.decode.iot.policystore.CreateEntitlementPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.CreateEntitlementPolicyRequest}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.decode.iot.policystore.Operation;
      reader.readMessage(value,proto.decode.iot.policystore.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.CreateEntitlementPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.decode.iot.policystore.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string public_key = 1;
 * @return {string}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.setPublicKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Operation operations = 3;
 * @return {!Array<!proto.decode.iot.policystore.Operation>}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.decode.iot.policystore.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.decode.iot.policystore.Operation, 3));
};


/** @param {!Array<!proto.decode.iot.policystore.Operation>} value */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.setOperationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.decode.iot.policystore.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.decode.iot.policystore.Operation}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.decode.iot.policystore.Operation, opt_index);
};


proto.decode.iot.policystore.CreateEntitlementPolicyRequest.prototype.clearOperationsList = function() {
  this.setOperationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.decode.iot.policystore.CreateEntitlementPolicyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.CreateEntitlementPolicyResponse.displayName = 'proto.decode.iot.policystore.CreateEntitlementPolicyResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.CreateEntitlementPolicyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.CreateEntitlementPolicyResponse}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.CreateEntitlementPolicyResponse;
  return proto.decode.iot.policystore.CreateEntitlementPolicyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.CreateEntitlementPolicyResponse}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.CreateEntitlementPolicyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.CreateEntitlementPolicyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.CreateEntitlementPolicyResponse.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.decode.iot.policystore.DeleteEntitlementPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.displayName = 'proto.decode.iot.policystore.DeleteEntitlementPolicyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.DeleteEntitlementPolicyRequest}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.DeleteEntitlementPolicyRequest;
  return proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.DeleteEntitlementPolicyRequest}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.DeleteEntitlementPolicyRequest.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.decode.iot.policystore.DeleteEntitlementPolicyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.displayName = 'proto.decode.iot.policystore.DeleteEntitlementPolicyResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.DeleteEntitlementPolicyResponse}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.DeleteEntitlementPolicyResponse;
  return proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.DeleteEntitlementPolicyResponse}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.DeleteEntitlementPolicyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.DeleteEntitlementPolicyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.decode.iot.policystore.ListEntitlementPoliciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.ListEntitlementPoliciesRequest.displayName = 'proto.decode.iot.policystore.ListEntitlementPoliciesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.ListEntitlementPoliciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesRequest}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.ListEntitlementPoliciesRequest;
  return proto.decode.iot.policystore.ListEntitlementPoliciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesRequest}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.ListEntitlementPoliciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.decode.iot.policystore.ListEntitlementPoliciesResponse.repeatedFields_, null);
};
goog.inherits(proto.decode.iot.policystore.ListEntitlementPoliciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.ListEntitlementPoliciesResponse.displayName = 'proto.decode.iot.policystore.ListEntitlementPoliciesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.ListEntitlementPoliciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    policiesList: jspb.Message.toObjectList(msg.getPoliciesList(),
    proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.ListEntitlementPoliciesResponse;
  return proto.decode.iot.policystore.ListEntitlementPoliciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy;
      reader.readMessage(value,proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.deserializeBinaryFromReader);
      msg.addPolicies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.ListEntitlementPoliciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.repeatedFields_, null);
};
goog.inherits(proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.displayName = 'proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.toObject = function(opt_includeInstance) {
  return proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.decode.iot.policystore.Operation.toObject, includeInstance),
    publicKey: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy;
  return proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.decode.iot.policystore.Operation;
      reader.readMessage(value,proto.decode.iot.policystore.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.decode.iot.policystore.Operation.serializeBinaryToWriter
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Operation operations = 3;
 * @return {!Array<!proto.decode.iot.policystore.Operation>}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.decode.iot.policystore.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.decode.iot.policystore.Operation, 3));
};


/** @param {!Array<!proto.decode.iot.policystore.Operation>} value */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.setOperationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.decode.iot.policystore.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.decode.iot.policystore.Operation}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.decode.iot.policystore.Operation, opt_index);
};


proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.clearOperationsList = function() {
  this.setOperationsList([]);
};


/**
 * optional string public_key = 4;
 * @return {string}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy.prototype.setPublicKey = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Policy policies = 1;
 * @return {!Array<!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy>}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.getPoliciesList = function() {
  return /** @type{!Array<!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy, 1));
};


/** @param {!Array<!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy>} value */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.setPoliciesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy}
 */
proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.addPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.decode.iot.policystore.ListEntitlementPoliciesResponse.Policy, opt_index);
};


proto.decode.iot.policystore.ListEntitlementPoliciesResponse.prototype.clearPoliciesList = function() {
  this.setPoliciesList([]);
};


goog.object.extend(exports, proto.decode.iot.policystore);
